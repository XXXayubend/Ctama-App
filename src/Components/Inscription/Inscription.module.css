@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: "Montserrat", sans-serif;
}

:root{
    --primaryColor: hsl(221, 55%, 56%);
    --hoverColor: hsl(26, 75%, 76%);
    --paleOrange: hsl(23, 94%, 50%);
    --whiteColor: hsl(0, 0%, 100%);
    --blackColor: hsl(0, 0%, 8%);
    --bgColor: hsl(113, 11%, 85%);
    --inputColor: hsl(330, 12%, 97%);
    --inputColor: hsl(154, 14%, 90%);

    
    --biggestFontSize: 2.5rem;
    --h1FontSize: 1.5rem;
    --h2FontSize: 1.25rem;
    --h3FontSize: 1rem;
    --normalFontSize: .938rem;
    --smallFontSize: .813rem;
    --smallestFontSize: .75rem;  
}

.flex{
    display: flex;
    align-items: center;
}

.grid{
    display: grid;
    align-items: center;
    gap: 1.5rem;
}

html{
    font-size: 90%;
}

a{
    text-decoration: none;
}

li{
    list-style: none;
}
.icon{
    font-size: var(--h2FontSize);
    cursor: pointer;
}

img, video{
    height: auto;
    width: 100%;
}

.message{
    display: none;
}

.showMessage{
    display: block;
    color: var(--whiteColor);
    padding: 10px;
    background: rgba(238, 105, 10, 0.979);
    border-radius: 3px;
    text-align: center;
}
.showMessage{
    display: block;
    color:var(--whiteColor) ;
    background: rgb(247 , 114, 5);
    border-radius: 3px;
    text-align: center;
}

.btn{
    border: none;
    outline: none;
    cursor: pointer;
    border-radius: 8px;
    padding: .8rem 1rem;
    color: var(--greyText);
}

.btn .icon{
    margin-left: .5rem;
}

.btn:hover{
    color: var(--primaryColor);
    background: var(--paleOrange);
}

.inscriptionPage {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 83%;
    margin: 0 auto;
    padding:  20px;
    width: 100%;
    transform: translateX(-120px);
    /* width: calc(100% + 280px);  */
  }

.container {
  margin: 0 auto;
  padding: 40px;
  padding-top: -40px;
}  

.videoDiv video{
  position: absolute;
  top: 0;
  left: 0;
  width: 130%;
  height: 110%;
  object-fit: cover;
  z-index: -1;
}

.overplay{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1;
}

.title {
  font-size: 150%;
  font-weight: 600;
  text-align: left;
  padding-top: 150px;
  margin-bottom: 20px;
}
        
.menu {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 20px;
}

.blueBorder {
    border: 1px solid #f9fbfd; 
    padding: 3px;
    border-radius: 5px;
    color: var(--whiteColor);
}
       
.navItem1 {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}
          
.navList1 {
    margin: 0 90px;
    font-size: 35px;
    color: #0a0a0a;
    cursor: pointer;
}

.navList1 svg {
    font-size: 24px;
    margin-right: 10px;
}

.navList1 svg circle {
    fill: #333;
    stroke: #333;
    stroke-width: 2;
}

.navList1 svg line {
    stroke: #333;
    stroke-width: 2;
}

.navList1:hover {
    color: #666;
}
          
.navList1:hover svg circle {
    fill: #666;
    stroke: #666;
}
        
.navList1:hover svg line {
    stroke: #666;
    
}  

        
/* Icon Styling */

.navItem1 {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #fff;
    border: 2px solid #333;
    margin: 0 10px;
    cursor: pointer;
}

.navItem1 svg {
    font-size: 24px;
    margin: 0 auto;
} 
.navItem1:hover {
    background-color: #f0f0f0;
    border-color: var(--blackColor);
}

.navItem1:hover svg {
    fill: #0602f1;
    stroke: #0b1ff7;
}
/* Form Styling,  Texting Styling  */  
.iconWrapper {
    display: flex;
    align-items: center;
  }
  
  .iconWrapper > * {
    margin-right: 10px;
  }
  

.form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
    margin-left: 0;
} 

.inputDiv2 {
    flex-wrap: wrap;
    display: flex;
    margin-right: 20px;
}

.inputDiv1{
  flex-wrap: wrap;
  display: flex;
  margin-right: 20px;
}

.inputDiv {
  flex-wrap: wrap;
  display: flex;
  margin-right: 20px;
}
  
.inputWrapper {
    display: flex;
    align-items: center;
    flex-direction: column;
    margin-bottom: 0px;  
    margin-right: 70px;  
}
  
.inputWrapperLabel {
    margin-right: 20px;
    padding-right: 20px;
    margin-left: 20vh;
}
  
.inputWrapperInput { 
    font-weight: 100;
    font-size: 17px;
    padding: .5rem 0;
    display: block;
    border-radius: 10px;
    background-color: var(--whiteColor);
}


/* .inputWrapper select{
    color: var(--blackColor);
    font-weight: 100;
    font-size: 17px;
    padding: .5rem 0;
    display: block;
    border-radius: 20px;
} */

.inputWrapper label{
    color: var(--blackColor);
    font-weight: 400;
    font-size: 14px;
    padding: .5rem 0;
    display: block;
}

.checkbox-circle {
    transform: scale(1.7); /* Increase the size of the checkbox by 1.5 times */
    margin-right: 10px; /* Add some space between the checkbox and the text */
}

.small-text{
    font-size: 1rem;
    font-weight: 200;
    color: #f0f0f0;
}

/* .checkbox-circle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #fff;
    border: 2px solid #333;
    margin: 0 10px;
    cursor: pointer;
} */
/* 
<div className="textDiv">
  <label htmlFor="">
    <div>
      <input
        type="checkbox"
        checked={isChecked[0]}
        onChange={handleCheckboxChange(0)}
        style={{ marginRight: 10 }} // Add some space between the checkbox and the text
      />
      <p style={{ display: 'inline-block' }}>J'accepte la politique de gestion des données personnelles</p>
    </div>
    <div>
      <input
        type="checkbox"
        checked={isChecked[1]}
        onChange={handleCheckboxChange(1)}
        style={{ marginRight: 10 }} // Add some space between the checkbox and the text
      />
      <p style={{ display: 'inline-block' }}>Je ne souhaite pas l'utilisation de mes données de contact (numéro du portable, mail, adresse postale...) dans le cadre de conseil commercial ou évènementiel</p>
    </div>
  </label>
</div> */

/* <button className="proposal-button" onClick={handleToggleProposals}>
        <FontAwesomeIcon icon={faArrowDown} />
      </button> */

/* const [showProposals, setShowProposals] = useState(false);

const handleToggleProposals = () => {
  setShowProposals(!showProposals);
}; */

/* .checkbox-circle input[type="checkbox"] {
    display: none;
} */

/* .checkbox-circle input[type="checkbox"] + label {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #fff;
    border: 2px solid #333;
    cursor: pointer;
} */

/* .checkbox-circle input[type="checkbox"]:checked + label {
    background-color: var(--paleOrange)} */


/* Fixing the bottom */

/* .checkbox-circle-custom {
    position: relative;
    display: inline-block;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: #fff;
    border: 1px solid #ddd;
    margin-right: 10px;
  } */
  
  /* .checkbox-circle-custom input[type="checkbox"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
  } */
  
  /* .checkbox-circle-custom::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #fff;
    display: none;
  } */
  
  /* .checkbox-circle-custom input[type="checkbox"]:checked::before {
    display: block;
    background-color: #337ab7;
  } */

/* .checkbox-circle {
    display: flex;
    align-items: center;
  }


  .checkbox-circle {
    appearance: none;
    border: none;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    background-color: #fff;
    cursor: pointer;
    margin-right: 10px;
  }
  
  .checkbox-circle-custom {
    position: relative;
    top: 2px;
    display: inline-block;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: #fff;
    border: 1px solid #ddd;
  }
  
  .checkbox-circle-custom::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #fff;
    display: none;
  }
  
  .checkbox-circle:checked + .checkbox-circle-custom::before {
    display: block;
    background-color: #337ab7;
  }   */

/* .textDiv {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}
  
.checkbox-container {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}
  
.checkbox-circle {
    margin-right: 10px;
}

/* const [checkboxStates, setCheckboxStates] = useState([false, false]);

const handleCheckboxChange = (index) => (event) => {
  const newStates = [...checkboxStates];
  newStates[index] = event.target.checked;
  setCheckboxStates(newStates);
}; */
  
/* .videoDiv {
    position: relative;
    width: 100%;
    height: 100vh; 
    overflow: hidden;
  }
  
  .videoDiv video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: -1; 
  }
  
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 1; 
  }
  
  */

/* Styling Page */

/* Footer Styling  */

/* const FooterContainer = styled.footer`
  background-color: #007bff; /* blue color */
  /* padding: 20px;
  text-align: center;
  width: 100%; /* span the entire width of the page */
  /* position: absolute; /* position at the bottom of the page */
  /* bottom: 0;
`; */ 


/* import React from 'react';
import Footer from './Footer';

const App = () => {
  return (
    <div>
      <Footer />
    </div>
  );
}; */

